{"id":"node_modules/dagre-d3-es/src/dagre/rank/index.js","dependencies":[{"name":"/Users/chunza2542/Documents/mermaid-to-excalidraw/package.json","includedInParent":true,"mtime":1681901466311},{"name":"/Users/chunza2542/Documents/mermaid-to-excalidraw/node_modules/dagre-d3-es/package.json","includedInParent":true,"mtime":1681901459535},{"name":"./feasible-tree.js","loc":{"line":1,"column":29,"index":29},"parent":"/Users/chunza2542/Documents/mermaid-to-excalidraw/node_modules/dagre-d3-es/src/dagre/rank/index.js","resolved":"/Users/chunza2542/Documents/mermaid-to-excalidraw/node_modules/dagre-d3-es/src/dagre/rank/feasible-tree.js"},{"name":"./network-simplex.js","loc":{"line":2,"column":31,"index":82},"parent":"/Users/chunza2542/Documents/mermaid-to-excalidraw/node_modules/dagre-d3-es/src/dagre/rank/index.js","resolved":"/Users/chunza2542/Documents/mermaid-to-excalidraw/node_modules/dagre-d3-es/src/dagre/rank/network-simplex.js"},{"name":"./util.js","loc":{"line":3,"column":28,"index":134},"parent":"/Users/chunza2542/Documents/mermaid-to-excalidraw/node_modules/dagre-d3-es/src/dagre/rank/index.js","resolved":"/Users/chunza2542/Documents/mermaid-to-excalidraw/node_modules/dagre-d3-es/src/dagre/rank/util.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.rank = rank;\nvar _feasibleTree = require(\"./feasible-tree.js\");\nvar _networkSimplex = require(\"./network-simplex.js\");\nvar _util = require(\"./util.js\");\n/*\n * Assigns a rank to each node in the input graph that respects the \"minlen\"\n * constraint specified on edges between nodes.\n *\n * This basic structure is derived from Gansner, et al., \"A Technique for\n * Drawing Directed Graphs.\"\n *\n * Pre-conditions:\n *\n *    1. Graph must be a connected DAG\n *    2. Graph nodes must be objects\n *    3. Graph edges must have \"weight\" and \"minlen\" attributes\n *\n * Post-conditions:\n *\n *    1. Graph nodes will have a \"rank\" attribute based on the results of the\n *       algorithm. Ranks can start at any index (including negative), we'll\n *       fix them up later.\n */\nfunction rank(g) {\n  switch (g.graph().ranker) {\n    case 'network-simplex':\n      networkSimplexRanker(g);\n      break;\n    case 'tight-tree':\n      tightTreeRanker(g);\n      break;\n    case 'longest-path':\n      longestPathRanker(g);\n      break;\n    default:\n      networkSimplexRanker(g);\n  }\n}\n\n// A fast and simple ranker, but results are far from optimal.\nvar longestPathRanker = _util.longestPath;\nfunction tightTreeRanker(g) {\n  (0, _util.longestPath)(g);\n  (0, _feasibleTree.feasibleTree)(g);\n}\nfunction networkSimplexRanker(g) {\n  (0, _networkSimplex.networkSimplex)(g);\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":1,"column":0}},{"generated":{"line":7,"column":4},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":1,"column":0},"name":"_feasibleTree"},{"generated":{"line":7,"column":17},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":1,"column":0}},{"generated":{"line":7,"column":20},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":1,"column":0},"name":"require"},{"generated":{"line":7,"column":27},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":2,"column":0}},{"generated":{"line":8,"column":4},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":2,"column":0},"name":"_networkSimplex"},{"generated":{"line":8,"column":19},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":2,"column":0}},{"generated":{"line":8,"column":22},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":2,"column":0},"name":"require"},{"generated":{"line":8,"column":29},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":2,"column":0}},{"generated":{"line":9,"column":0},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":3,"column":0}},{"generated":{"line":9,"column":4},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":3,"column":0},"name":"_util"},{"generated":{"line":9,"column":9},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":3,"column":0}},{"generated":{"line":9,"column":12},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":3,"column":0},"name":"require"},{"generated":{"line":9,"column":19},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":3,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":7,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":8,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":9,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":10,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":11,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":12,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":13,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":14,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":15,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":16,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":17,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":18,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":19,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":20,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":21,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":22,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":23,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":24,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":25,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":26,"column":0}},{"generated":{"line":29,"column":9},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":26,"column":9},"name":"rank"},{"generated":{"line":29,"column":13},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":26,"column":13},"name":"rank"},{"generated":{"line":29,"column":14},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":26,"column":14},"name":"g"},{"generated":{"line":29,"column":15},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":26,"column":15}},{"generated":{"line":29,"column":17},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":26,"column":17}},{"generated":{"line":30,"column":2},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":27,"column":2}},{"generated":{"line":30,"column":10},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":27,"column":10},"name":"g"},{"generated":{"line":30,"column":11},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":27,"column":11}},{"generated":{"line":30,"column":12},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":27,"column":12},"name":"graph"},{"generated":{"line":30,"column":17},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":27,"column":17}},{"generated":{"line":30,"column":19},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":27,"column":19}},{"generated":{"line":30,"column":20},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":27,"column":20},"name":"ranker"},{"generated":{"line":30,"column":26},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":27,"column":26}},{"generated":{"line":31,"column":4},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":28,"column":4}},{"generated":{"line":31,"column":9},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":28,"column":9}},{"generated":{"line":31,"column":26},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":28,"column":26}},{"generated":{"line":32,"column":6},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":29,"column":6},"name":"networkSimplexRanker"},{"generated":{"line":32,"column":26},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":29,"column":26}},{"generated":{"line":32,"column":27},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":29,"column":27},"name":"g"},{"generated":{"line":32,"column":28},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":29,"column":28}},{"generated":{"line":32,"column":29},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":29,"column":29}},{"generated":{"line":33,"column":6},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":30,"column":6}},{"generated":{"line":34,"column":4},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":31,"column":4}},{"generated":{"line":34,"column":9},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":31,"column":9}},{"generated":{"line":34,"column":21},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":31,"column":21}},{"generated":{"line":35,"column":6},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":32,"column":6},"name":"tightTreeRanker"},{"generated":{"line":35,"column":21},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":32,"column":21}},{"generated":{"line":35,"column":22},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":32,"column":22},"name":"g"},{"generated":{"line":35,"column":23},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":32,"column":23}},{"generated":{"line":35,"column":24},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":32,"column":24}},{"generated":{"line":36,"column":6},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":33,"column":6}},{"generated":{"line":37,"column":4},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":34,"column":4}},{"generated":{"line":37,"column":9},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":34,"column":9}},{"generated":{"line":37,"column":23},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":34,"column":23}},{"generated":{"line":38,"column":6},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":35,"column":6},"name":"longestPathRanker"},{"generated":{"line":38,"column":23},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":35,"column":23}},{"generated":{"line":38,"column":24},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":35,"column":24},"name":"g"},{"generated":{"line":38,"column":25},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":35,"column":25}},{"generated":{"line":38,"column":26},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":35,"column":26}},{"generated":{"line":39,"column":6},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":36,"column":6}},{"generated":{"line":40,"column":4},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":37,"column":4}},{"generated":{"line":41,"column":6},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":38,"column":6},"name":"networkSimplexRanker"},{"generated":{"line":41,"column":26},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":38,"column":26}},{"generated":{"line":41,"column":27},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":38,"column":27},"name":"g"},{"generated":{"line":41,"column":28},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":38,"column":28}},{"generated":{"line":41,"column":29},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":38,"column":29}},{"generated":{"line":42,"column":2},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":38,"column":30}},{"generated":{"line":43,"column":0},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":40,"column":0}},{"generated":{"line":45,"column":0},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":42,"column":0}},{"generated":{"line":46,"column":0},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":43,"column":0}},{"generated":{"line":46,"column":4},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":43,"column":4},"name":"longestPathRanker"},{"generated":{"line":46,"column":21},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":43,"column":21}},{"generated":{"line":46,"column":24},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":43,"column":24},"name":"longestPath"},{"generated":{"line":46,"column":41},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":43,"column":35}},{"generated":{"line":47,"column":0},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":45,"column":0}},{"generated":{"line":47,"column":9},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":45,"column":9},"name":"tightTreeRanker"},{"generated":{"line":47,"column":24},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":45,"column":24},"name":"tightTreeRanker"},{"generated":{"line":47,"column":25},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":45,"column":25},"name":"g"},{"generated":{"line":47,"column":26},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":45,"column":26}},{"generated":{"line":47,"column":28},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":45,"column":28}},{"generated":{"line":48,"column":2},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":46,"column":2}},{"generated":{"line":48,"column":6},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":46,"column":2},"name":"longestPath"},{"generated":{"line":48,"column":23},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":46,"column":13}},{"generated":{"line":48,"column":25},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":46,"column":14},"name":"g"},{"generated":{"line":48,"column":26},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":46,"column":15}},{"generated":{"line":48,"column":27},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":46,"column":16}},{"generated":{"line":49,"column":2},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":47,"column":2}},{"generated":{"line":49,"column":6},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":47,"column":2},"name":"feasibleTree"},{"generated":{"line":49,"column":32},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":47,"column":14}},{"generated":{"line":49,"column":34},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":47,"column":15},"name":"g"},{"generated":{"line":49,"column":35},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":47,"column":16}},{"generated":{"line":49,"column":36},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":47,"column":17}},{"generated":{"line":50,"column":0},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":48,"column":0}},{"generated":{"line":51,"column":0},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":50,"column":0}},{"generated":{"line":51,"column":9},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":50,"column":9},"name":"networkSimplexRanker"},{"generated":{"line":51,"column":29},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":50,"column":29},"name":"networkSimplexRanker"},{"generated":{"line":51,"column":30},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":50,"column":30},"name":"g"},{"generated":{"line":51,"column":31},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":50,"column":31}},{"generated":{"line":51,"column":33},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":50,"column":33}},{"generated":{"line":52,"column":2},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":51,"column":2}},{"generated":{"line":52,"column":6},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":51,"column":2},"name":"networkSimplex"},{"generated":{"line":52,"column":36},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":51,"column":16}},{"generated":{"line":52,"column":38},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":51,"column":17},"name":"g"},{"generated":{"line":52,"column":39},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":51,"column":18}},{"generated":{"line":52,"column":40},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":51,"column":19}},{"generated":{"line":53,"column":0},"source":"node_modules/dagre-d3-es/src/dagre/rank/index.js","original":{"line":52,"column":0}}],"sources":{"node_modules/dagre-d3-es/src/dagre/rank/index.js":"import { feasibleTree } from './feasible-tree.js';\nimport { networkSimplex } from './network-simplex.js';\nimport { longestPath } from './util.js';\n\nexport { rank };\n\n/*\n * Assigns a rank to each node in the input graph that respects the \"minlen\"\n * constraint specified on edges between nodes.\n *\n * This basic structure is derived from Gansner, et al., \"A Technique for\n * Drawing Directed Graphs.\"\n *\n * Pre-conditions:\n *\n *    1. Graph must be a connected DAG\n *    2. Graph nodes must be objects\n *    3. Graph edges must have \"weight\" and \"minlen\" attributes\n *\n * Post-conditions:\n *\n *    1. Graph nodes will have a \"rank\" attribute based on the results of the\n *       algorithm. Ranks can start at any index (including negative), we'll\n *       fix them up later.\n */\nfunction rank(g) {\n  switch (g.graph().ranker) {\n    case 'network-simplex':\n      networkSimplexRanker(g);\n      break;\n    case 'tight-tree':\n      tightTreeRanker(g);\n      break;\n    case 'longest-path':\n      longestPathRanker(g);\n      break;\n    default:\n      networkSimplexRanker(g);\n  }\n}\n\n// A fast and simple ranker, but results are far from optimal.\nvar longestPathRanker = longestPath;\n\nfunction tightTreeRanker(g) {\n  longestPath(g);\n  feasibleTree(g);\n}\n\nfunction networkSimplexRanker(g) {\n  networkSimplex(g);\n}\n"},"lineCount":null}},"error":null,"hash":"8f1ef5fa673f3953b771d868e754d16e","cacheData":{"env":{}}}