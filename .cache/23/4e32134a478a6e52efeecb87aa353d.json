{"id":"node_modules/lodash-es/isEqual.js","dependencies":[{"name":"/Users/chunza2542/Documents/mermaid-to-excalidraw/package.json","includedInParent":true,"mtime":1681901466311},{"name":"/Users/chunza2542/Documents/mermaid-to-excalidraw/node_modules/lodash-es/package.json","includedInParent":true,"mtime":1681901459537},{"name":"./_baseIsEqual.js","loc":{"line":1,"column":24,"index":24},"parent":"/Users/chunza2542/Documents/mermaid-to-excalidraw/node_modules/lodash-es/isEqual.js","resolved":"/Users/chunza2542/Documents/mermaid-to-excalidraw/node_modules/lodash-es/_baseIsEqual.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _baseIsEqual = _interopRequireDefault(require(\"./_baseIsEqual.js\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return (0, _baseIsEqual.default)(value, other);\n}\nvar _default = isEqual;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/lodash-es/isEqual.js","original":{"line":1,"column":0}},{"generated":{"line":7,"column":4},"source":"node_modules/lodash-es/isEqual.js","original":{"line":1,"column":0},"name":"_baseIsEqual"},{"generated":{"line":7,"column":16},"source":"node_modules/lodash-es/isEqual.js","original":{"line":1,"column":0}},{"generated":{"line":7,"column":19},"source":"node_modules/lodash-es/isEqual.js","original":{"line":1,"column":0},"name":"_interopRequireDefault"},{"generated":{"line":7,"column":41},"source":"node_modules/lodash-es/isEqual.js","original":{"line":1,"column":0}},{"generated":{"line":7,"column":42},"source":"node_modules/lodash-es/isEqual.js","original":{"line":1,"column":0},"name":"require"},{"generated":{"line":7,"column":49},"source":"node_modules/lodash-es/isEqual.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"node_modules/lodash-es/isEqual.js","original":{"line":1,"column":44}},{"generated":{"line":8,"column":9},"source":"node_modules/lodash-es/isEqual.js","original":{"line":1,"column":44},"name":"_interopRequireDefault"},{"generated":{"line":8,"column":32},"source":"node_modules/lodash-es/isEqual.js","original":{"line":1,"column":44},"name":"obj"},{"generated":{"line":8,"column":35},"source":"node_modules/lodash-es/isEqual.js","original":{"line":1,"column":44}},{"generated":{"line":8,"column":46},"source":"node_modules/lodash-es/isEqual.js","original":{"line":1,"column":44},"name":"obj"},{"generated":{"line":8,"column":49},"source":"node_modules/lodash-es/isEqual.js","original":{"line":1,"column":44}},{"generated":{"line":8,"column":53},"source":"node_modules/lodash-es/isEqual.js","original":{"line":1,"column":44},"name":"obj"},{"generated":{"line":8,"column":56},"source":"node_modules/lodash-es/isEqual.js","original":{"line":1,"column":44}},{"generated":{"line":8,"column":57},"source":"node_modules/lodash-es/isEqual.js","original":{"line":1,"column":44},"name":"__esModule"},{"generated":{"line":8,"column":67},"source":"node_modules/lodash-es/isEqual.js","original":{"line":1,"column":44}},{"generated":{"line":8,"column":70},"source":"node_modules/lodash-es/isEqual.js","original":{"line":1,"column":44},"name":"obj"},{"generated":{"line":8,"column":73},"source":"node_modules/lodash-es/isEqual.js","original":{"line":1,"column":44}},{"generated":{"line":8,"column":78},"source":"node_modules/lodash-es/isEqual.js","original":{"line":1,"column":44},"name":"default"},{"generated":{"line":8,"column":85},"source":"node_modules/lodash-es/isEqual.js","original":{"line":1,"column":44}},{"generated":{"line":8,"column":87},"source":"node_modules/lodash-es/isEqual.js","original":{"line":1,"column":44},"name":"obj"},{"generated":{"line":8,"column":90},"source":"node_modules/lodash-es/isEqual.js","original":{"line":1,"column":44}},{"generated":{"line":9,"column":0},"source":"node_modules/lodash-es/isEqual.js","original":{"line":3,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/lodash-es/isEqual.js","original":{"line":4,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/lodash-es/isEqual.js","original":{"line":5,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/lodash-es/isEqual.js","original":{"line":6,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/lodash-es/isEqual.js","original":{"line":7,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/lodash-es/isEqual.js","original":{"line":8,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/lodash-es/isEqual.js","original":{"line":9,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/lodash-es/isEqual.js","original":{"line":10,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/lodash-es/isEqual.js","original":{"line":11,"column":0}},{"generated":{"line":18,"column":0},"source":"node_modules/lodash-es/isEqual.js","original":{"line":12,"column":0}},{"generated":{"line":19,"column":0},"source":"node_modules/lodash-es/isEqual.js","original":{"line":13,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/lodash-es/isEqual.js","original":{"line":14,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/lodash-es/isEqual.js","original":{"line":15,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/lodash-es/isEqual.js","original":{"line":16,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/lodash-es/isEqual.js","original":{"line":17,"column":0}},{"generated":{"line":24,"column":0},"source":"node_modules/lodash-es/isEqual.js","original":{"line":18,"column":0}},{"generated":{"line":25,"column":0},"source":"node_modules/lodash-es/isEqual.js","original":{"line":19,"column":0}},{"generated":{"line":26,"column":0},"source":"node_modules/lodash-es/isEqual.js","original":{"line":20,"column":0}},{"generated":{"line":27,"column":0},"source":"node_modules/lodash-es/isEqual.js","original":{"line":21,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/lodash-es/isEqual.js","original":{"line":22,"column":0}},{"generated":{"line":29,"column":0},"source":"node_modules/lodash-es/isEqual.js","original":{"line":23,"column":0}},{"generated":{"line":30,"column":0},"source":"node_modules/lodash-es/isEqual.js","original":{"line":24,"column":0}},{"generated":{"line":31,"column":0},"source":"node_modules/lodash-es/isEqual.js","original":{"line":25,"column":0}},{"generated":{"line":32,"column":0},"source":"node_modules/lodash-es/isEqual.js","original":{"line":26,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/lodash-es/isEqual.js","original":{"line":27,"column":0}},{"generated":{"line":34,"column":0},"source":"node_modules/lodash-es/isEqual.js","original":{"line":28,"column":0}},{"generated":{"line":35,"column":0},"source":"node_modules/lodash-es/isEqual.js","original":{"line":29,"column":0}},{"generated":{"line":36,"column":0},"source":"node_modules/lodash-es/isEqual.js","original":{"line":30,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/lodash-es/isEqual.js","original":{"line":31,"column":0}},{"generated":{"line":37,"column":9},"source":"node_modules/lodash-es/isEqual.js","original":{"line":31,"column":9},"name":"isEqual"},{"generated":{"line":37,"column":16},"source":"node_modules/lodash-es/isEqual.js","original":{"line":31,"column":16},"name":"isEqual"},{"generated":{"line":37,"column":17},"source":"node_modules/lodash-es/isEqual.js","original":{"line":31,"column":17},"name":"value"},{"generated":{"line":37,"column":22},"source":"node_modules/lodash-es/isEqual.js","original":{"line":31,"column":22}},{"generated":{"line":37,"column":24},"source":"node_modules/lodash-es/isEqual.js","original":{"line":31,"column":24},"name":"other"},{"generated":{"line":37,"column":29},"source":"node_modules/lodash-es/isEqual.js","original":{"line":31,"column":29}},{"generated":{"line":37,"column":31},"source":"node_modules/lodash-es/isEqual.js","original":{"line":31,"column":31}},{"generated":{"line":38,"column":2},"source":"node_modules/lodash-es/isEqual.js","original":{"line":32,"column":2}},{"generated":{"line":38,"column":9},"source":"node_modules/lodash-es/isEqual.js","original":{"line":32,"column":9}},{"generated":{"line":38,"column":13},"source":"node_modules/lodash-es/isEqual.js","original":{"line":32,"column":9},"name":"baseIsEqual"},{"generated":{"line":38,"column":33},"source":"node_modules/lodash-es/isEqual.js","original":{"line":32,"column":20}},{"generated":{"line":38,"column":35},"source":"node_modules/lodash-es/isEqual.js","original":{"line":32,"column":21},"name":"value"},{"generated":{"line":38,"column":40},"source":"node_modules/lodash-es/isEqual.js","original":{"line":32,"column":26}},{"generated":{"line":38,"column":42},"source":"node_modules/lodash-es/isEqual.js","original":{"line":32,"column":28},"name":"other"},{"generated":{"line":38,"column":47},"source":"node_modules/lodash-es/isEqual.js","original":{"line":32,"column":33}},{"generated":{"line":38,"column":48},"source":"node_modules/lodash-es/isEqual.js","original":{"line":32,"column":34}},{"generated":{"line":39,"column":0},"source":"node_modules/lodash-es/isEqual.js","original":{"line":33,"column":0}},{"generated":{"line":40,"column":0},"source":"node_modules/lodash-es/isEqual.js","original":{"line":33,"column":1}},{"generated":{"line":40,"column":4},"source":"node_modules/lodash-es/isEqual.js","original":{"line":33,"column":1},"name":"_default"},{"generated":{"line":40,"column":12},"source":"node_modules/lodash-es/isEqual.js","original":{"line":33,"column":1}},{"generated":{"line":40,"column":15},"source":"node_modules/lodash-es/isEqual.js","original":{"line":35,"column":15},"name":"isEqual"},{"generated":{"line":40,"column":22},"source":"node_modules/lodash-es/isEqual.js","original":{"line":35,"column":22}},{"generated":{"line":41,"column":0},"source":"node_modules/lodash-es/isEqual.js","original":{"line":35,"column":22},"name":"exports"},{"generated":{"line":41,"column":7},"source":"node_modules/lodash-es/isEqual.js","original":{"line":35,"column":22}},{"generated":{"line":41,"column":8},"source":"node_modules/lodash-es/isEqual.js","original":{"line":35,"column":22},"name":"default"},{"generated":{"line":41,"column":15},"source":"node_modules/lodash-es/isEqual.js","original":{"line":35,"column":22}},{"generated":{"line":41,"column":18},"source":"node_modules/lodash-es/isEqual.js","original":{"line":35,"column":22},"name":"_default"},{"generated":{"line":41,"column":26},"source":"node_modules/lodash-es/isEqual.js","original":{"line":35,"column":22}}],"sources":{"node_modules/lodash-es/isEqual.js":"import baseIsEqual from './_baseIsEqual.js';\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nexport default isEqual;\n"},"lineCount":null}},"error":null,"hash":"eb5d2698eea01519d2b476fd22d88e21","cacheData":{"env":{}}}