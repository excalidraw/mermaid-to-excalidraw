{"id":"node_modules/d3-selection/src/array.js","dependencies":[{"name":"/Users/chunza2542/Documents/mermaid-to-excalidraw/package.json","includedInParent":true,"mtime":1681901466311},{"name":"/Users/chunza2542/Documents/mermaid-to-excalidraw/node_modules/d3-selection/package.json","includedInParent":true,"mtime":1664165793512}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = array;\n// Given something array like (or null), returns something that is strictly an\n// array. This is used to ensure that array-like objects passed to d3.selectAll\n// or selection.selectAll are converted into proper arrays when creating a\n// selection; we don’t ever want to create a selection backed by a live\n// HTMLCollection or NodeList. However, note that selection.selectAll will use a\n// static NodeList as a group, since it safely derived from querySelectorAll.\nfunction array(x) {\n  return x == null ? [] : Array.isArray(x) ? x : Array.from(x);\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/d3-selection/src/array.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":0},"source":"node_modules/d3-selection/src/array.js","original":{"line":2,"column":0}},{"generated":{"line":9,"column":0},"source":"node_modules/d3-selection/src/array.js","original":{"line":3,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/d3-selection/src/array.js","original":{"line":4,"column":0}},{"generated":{"line":11,"column":0},"source":"node_modules/d3-selection/src/array.js","original":{"line":5,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/d3-selection/src/array.js","original":{"line":6,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/d3-selection/src/array.js","original":{"line":7,"column":15}},{"generated":{"line":13,"column":9},"source":"node_modules/d3-selection/src/array.js","original":{"line":7,"column":24},"name":"array"},{"generated":{"line":13,"column":14},"source":"node_modules/d3-selection/src/array.js","original":{"line":7,"column":29},"name":"array"},{"generated":{"line":13,"column":15},"source":"node_modules/d3-selection/src/array.js","original":{"line":7,"column":30},"name":"x"},{"generated":{"line":13,"column":16},"source":"node_modules/d3-selection/src/array.js","original":{"line":7,"column":31}},{"generated":{"line":13,"column":18},"source":"node_modules/d3-selection/src/array.js","original":{"line":7,"column":33}},{"generated":{"line":14,"column":2},"source":"node_modules/d3-selection/src/array.js","original":{"line":8,"column":2}},{"generated":{"line":14,"column":9},"source":"node_modules/d3-selection/src/array.js","original":{"line":8,"column":9},"name":"x"},{"generated":{"line":14,"column":10},"source":"node_modules/d3-selection/src/array.js","original":{"line":8,"column":10}},{"generated":{"line":14,"column":14},"source":"node_modules/d3-selection/src/array.js","original":{"line":8,"column":14}},{"generated":{"line":14,"column":18},"source":"node_modules/d3-selection/src/array.js","original":{"line":8,"column":18}},{"generated":{"line":14,"column":21},"source":"node_modules/d3-selection/src/array.js","original":{"line":8,"column":21}},{"generated":{"line":14,"column":23},"source":"node_modules/d3-selection/src/array.js","original":{"line":8,"column":23}},{"generated":{"line":14,"column":26},"source":"node_modules/d3-selection/src/array.js","original":{"line":8,"column":26},"name":"Array"},{"generated":{"line":14,"column":31},"source":"node_modules/d3-selection/src/array.js","original":{"line":8,"column":31}},{"generated":{"line":14,"column":32},"source":"node_modules/d3-selection/src/array.js","original":{"line":8,"column":32},"name":"isArray"},{"generated":{"line":14,"column":39},"source":"node_modules/d3-selection/src/array.js","original":{"line":8,"column":39}},{"generated":{"line":14,"column":40},"source":"node_modules/d3-selection/src/array.js","original":{"line":8,"column":40},"name":"x"},{"generated":{"line":14,"column":41},"source":"node_modules/d3-selection/src/array.js","original":{"line":8,"column":41}},{"generated":{"line":14,"column":42},"source":"node_modules/d3-selection/src/array.js","original":{"line":8,"column":42}},{"generated":{"line":14,"column":45},"source":"node_modules/d3-selection/src/array.js","original":{"line":8,"column":45},"name":"x"},{"generated":{"line":14,"column":46},"source":"node_modules/d3-selection/src/array.js","original":{"line":8,"column":46}},{"generated":{"line":14,"column":49},"source":"node_modules/d3-selection/src/array.js","original":{"line":8,"column":49},"name":"Array"},{"generated":{"line":14,"column":54},"source":"node_modules/d3-selection/src/array.js","original":{"line":8,"column":54}},{"generated":{"line":14,"column":55},"source":"node_modules/d3-selection/src/array.js","original":{"line":8,"column":55},"name":"from"},{"generated":{"line":14,"column":59},"source":"node_modules/d3-selection/src/array.js","original":{"line":8,"column":59}},{"generated":{"line":14,"column":60},"source":"node_modules/d3-selection/src/array.js","original":{"line":8,"column":60},"name":"x"},{"generated":{"line":14,"column":61},"source":"node_modules/d3-selection/src/array.js","original":{"line":8,"column":61}},{"generated":{"line":14,"column":62},"source":"node_modules/d3-selection/src/array.js","original":{"line":8,"column":62}},{"generated":{"line":15,"column":0},"source":"node_modules/d3-selection/src/array.js","original":{"line":9,"column":0}}],"sources":{"node_modules/d3-selection/src/array.js":"// Given something array like (or null), returns something that is strictly an\n// array. This is used to ensure that array-like objects passed to d3.selectAll\n// or selection.selectAll are converted into proper arrays when creating a\n// selection; we don’t ever want to create a selection backed by a live\n// HTMLCollection or NodeList. However, note that selection.selectAll will use a\n// static NodeList as a group, since it safely derived from querySelectorAll.\nexport default function array(x) {\n  return x == null ? [] : Array.isArray(x) ? x : Array.from(x);\n}\n"},"lineCount":null}},"error":null,"hash":"498d103e7ab7b46ff5f7b191d53aee0e","cacheData":{"env":{}}}