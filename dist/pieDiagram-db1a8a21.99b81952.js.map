{"version":3,"sources":["../src/diagrams/pie/parser/pie.jison","../src/diagrams/pie/pieDb.js","../src/diagrams/pie/styles.js","../src/diagrams/pie/pieRenderer.js","../src/diagrams/pie/pieDiagram.ts"],"names":["o","parser","lexer","configApi.getConfig","commonClear","diagram","pie","d3pie","height"],"mappings":"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","file":"pieDiagram-db1a8a21.99b81952.js","sourceRoot":"..","sourcesContent":["/** mermaid\n *  https://knsv.github.io/mermaid\n *  (c) 2015 Knut Sveidqvist\n *  MIT license.\n */\n%lex\n%options case-insensitive\n\n%x string\n%x title\n%x open_directive\n%x type_directive\n%x arg_directive\n%x close_directive\n%x acc_title\n%x acc_descr\n%x acc_descr_multiline\n%%\n\\%\\%\\{                                                          { this.begin('open_directive'); return 'open_directive'; }\n<open_directive>((?:(?!\\}\\%\\%)[^:.])*)                          { this.begin('type_directive'); return 'type_directive'; }\n<type_directive>\":\"                                             { this.popState(); this.begin('arg_directive'); return ':'; }\n<type_directive,arg_directive>\\}\\%\\%                            { this.popState(); this.popState(); return 'close_directive'; }\n<arg_directive>((?:(?!\\}\\%\\%).|\\n)*)                            return 'arg_directive';\n\\%\\%(?!\\{)[^\\n]*                                                /* skip comments */\n[^\\}]\\%\\%[^\\n]*                                                 /* skip comments */{ /*console.log('');*/ }\n[\\n\\r]+                                                         return 'NEWLINE';\n\\%\\%[^\\n]*                                                      /* do nothing */\n[\\s]+ \t\t                                                      /* ignore */\ntitle                                                           { this.begin(\"title\");return 'title'; }\n<title>(?!\\n|;|#)*[^\\n]*                                        { this.popState(); return \"title_value\"; }\n\naccTitle\\s*\":\"\\s*                                               { this.begin(\"acc_title\");return 'acc_title'; }\n<acc_title>(?!\\n|;|#)*[^\\n]*                                    { this.popState(); return \"acc_title_value\"; }\naccDescr\\s*\":\"\\s*                                               { this.begin(\"acc_descr\");return 'acc_descr'; }\n<acc_descr>(?!\\n|;|#)*[^\\n]*                                    { this.popState(); return \"acc_descr_value\"; }\naccDescr\\s*\"{\"\\s*                                { this.begin(\"acc_descr_multiline\");}\n<acc_descr_multiline>[\\}]                       { this.popState(); }\n<acc_descr_multiline>[^\\}]*                     return \"acc_descr_multiline_value\";\n[\"]                                                             { this.begin(\"string\"); }\n<string>[\"]                                                     { this.popState(); }\n<string>[^\"]*                                                   { return \"txt\"; }\n\"pie\"\t\t                                                        return 'PIE';\n\"showData\"                                                      return 'showData';\n\":\"[\\s]*[\\d]+(?:\\.[\\d]+)?                                       return \"value\";\n<<EOF>>                                                         return 'EOF';\n\n/lex\n\n%start start\n\n%% /* language grammar */\n\nstart\n  : eol start\n  | directive start\n\t| PIE document\n  | PIE showData document {yy.setShowData(true);}\n\t;\n\ndocument\n\t: /* empty */\n\t| document line\n\t;\n\nline\n\t: statement eol { $$ = $1 }\n\t;\n\nstatement\n  :\n\t| txt value          { yy.addSection($1,yy.cleanupValue($2)); }\n\t| title title_value  { $$=$2.trim();yy.setDiagramTitle($$); }\n  | acc_title acc_title_value  { $$=$2.trim();yy.setAccTitle($$); }\n  | acc_descr acc_descr_value  { $$=$2.trim();yy.setAccDescription($$); }\n  | acc_descr_multiline_value { $$=$1.trim();yy.setAccDescription($$); }  | section {yy.addSection($1.substr(8));$$=$1.substr(8);}\n\t| directive\n\t;\n\ndirective\n  : openDirective typeDirective closeDirective\n  | openDirective typeDirective ':' argDirective closeDirective\n  ;\n\neol\n  : NEWLINE\n  | ';'\n  | EOF\n  ;\n\nopenDirective\n  : open_directive { yy.parseDirective('%%{', 'open_directive'); }\n  ;\n\ntypeDirective\n  : type_directive { yy.parseDirective($1, 'type_directive'); }\n  ;\n\nargDirective\n  : arg_directive { $1 = $1.trim().replace(/'/g, '\"'); yy.parseDirective($1, 'arg_directive'); }\n  ;\n\ncloseDirective\n  : close_directive { yy.parseDirective('}%%', 'close_directive', 'pie'); }\n  ;\n\n%%\n","import { log } from '../../logger';\nimport mermaidAPI from '../../mermaidAPI';\nimport * as configApi from '../../config';\nimport common from '../common/common';\nimport {\n  setAccTitle,\n  getAccTitle,\n  setDiagramTitle,\n  getDiagramTitle,\n  getAccDescription,\n  setAccDescription,\n  clear as commonClear,\n} from '../../commonDb';\n\nlet sections = {};\nlet showData = false;\n\nexport const parseDirective = function (statement, context, type) {\n  mermaidAPI.parseDirective(this, statement, context, type);\n};\n\nconst addSection = function (id, value) {\n  id = common.sanitizeText(id, configApi.getConfig());\n  if (sections[id] === undefined) {\n    sections[id] = value;\n    log.debug('Added new section :', id);\n  }\n};\nconst getSections = () => sections;\n\nconst setShowData = function (toggle) {\n  showData = toggle;\n};\n\nconst getShowData = function () {\n  return showData;\n};\n\nconst cleanupValue = function (value) {\n  if (value.substring(0, 1) === ':') {\n    value = value.substring(1).trim();\n    return Number(value.trim());\n  } else {\n    return Number(value.trim());\n  }\n};\n\nconst clear = function () {\n  sections = {};\n  showData = false;\n  commonClear();\n};\n\nexport default {\n  parseDirective,\n  getConfig: () => configApi.getConfig().pie,\n  addSection,\n  getSections,\n  cleanupValue,\n  clear,\n  setAccTitle,\n  getAccTitle,\n  setDiagramTitle,\n  getDiagramTitle,\n  setShowData,\n  getShowData,\n  getAccDescription,\n  setAccDescription,\n};\n","const getStyles = (options) =>\n  `\n  .pieCircle{\n    stroke: ${options.pieStrokeColor};\n    stroke-width : ${options.pieStrokeWidth};\n    opacity : ${options.pieOpacity};\n  }\n  .pieOuterCircle{\n    stroke: ${options.pieOuterStrokeColor};\n    stroke-width: ${options.pieOuterStrokeWidth};\n    fill: none;\n  }\n  .pieTitleText {\n    text-anchor: middle;\n    font-size: ${options.pieTitleTextSize};\n    fill: ${options.pieTitleTextColor};\n    font-family: ${options.fontFamily};\n  }\n  .slice {\n    font-family: ${options.fontFamily};\n    fill: ${options.pieSectionTextColor};\n    font-size:${options.pieSectionTextSize};\n    // fill: white;\n  }\n  .legend text {\n    fill: ${options.pieLegendTextColor};\n    font-family: ${options.fontFamily};\n    font-size: ${options.pieLegendTextSize};\n  }\n`;\n\nexport default getStyles;\n","/** Created by AshishJ on 11-09-2019. */\nimport { select, scaleOrdinal, pie as d3pie, arc } from 'd3';\nimport { log } from '../../logger';\nimport { configureSvgSize } from '../../setupGraphViewbox';\nimport * as configApi from '../../config';\nimport { parseFontSize } from '../../utils';\n\nlet conf = configApi.getConfig();\n\n/**\n * Draws a Pie Chart with the data given in text.\n *\n * @param text\n * @param id\n */\nlet width;\nconst height = 450;\nexport const draw = (txt, id, _version, diagObj) => {\n  try {\n    conf = configApi.getConfig();\n    log.debug('Rendering info diagram\\n' + txt);\n\n    const securityLevel = configApi.getConfig().securityLevel;\n    // Handle root and Document for when rendering in sandbox mode\n    let sandboxElement;\n    if (securityLevel === 'sandbox') {\n      sandboxElement = select('#i' + id);\n    }\n    const root =\n      securityLevel === 'sandbox'\n        ? select(sandboxElement.nodes()[0].contentDocument.body)\n        : select('body');\n    const doc = securityLevel === 'sandbox' ? sandboxElement.nodes()[0].contentDocument : document;\n\n    // Parse the Pie Chart definition\n    diagObj.db.clear();\n    diagObj.parser.parse(txt);\n    log.debug('Parsed info diagram');\n    const elem = doc.getElementById(id);\n    width = elem.parentElement.offsetWidth;\n\n    if (width === undefined) {\n      width = 1200;\n    }\n\n    if (conf.useWidth !== undefined) {\n      width = conf.useWidth;\n    }\n    if (conf.pie.useWidth !== undefined) {\n      width = conf.pie.useWidth;\n    }\n\n    const diagram = root.select('#' + id);\n    configureSvgSize(diagram, height, width, conf.pie.useMaxWidth);\n\n    // Set viewBox\n    elem.setAttribute('viewBox', '0 0 ' + width + ' ' + height);\n\n    // Fetch the default direction, use TD if none was found\n    var margin = 40;\n    var legendRectSize = 18;\n    var legendSpacing = 4;\n\n    var radius = Math.min(width, height) / 2 - margin;\n\n    var svg = diagram\n      .append('g')\n      .attr('transform', 'translate(' + width / 2 + ',' + height / 2 + ')');\n\n    var data = diagObj.db.getSections();\n    var sum = 0;\n    Object.keys(data).forEach(function (key) {\n      sum += data[key];\n    });\n\n    const themeVariables = conf.themeVariables;\n    var myGeneratedColors = [\n      themeVariables.pie1,\n      themeVariables.pie2,\n      themeVariables.pie3,\n      themeVariables.pie4,\n      themeVariables.pie5,\n      themeVariables.pie6,\n      themeVariables.pie7,\n      themeVariables.pie8,\n      themeVariables.pie9,\n      themeVariables.pie10,\n      themeVariables.pie11,\n      themeVariables.pie12,\n    ];\n\n    const textPosition = conf.pie?.textPosition ?? 0.75;\n    let [outerStrokeWidth] = parseFontSize(themeVariables.pieOuterStrokeWidth);\n    outerStrokeWidth ??= 2;\n\n    // Set the color scale\n    var color = scaleOrdinal().range(myGeneratedColors);\n\n    // Compute the position of each group on the pie:\n    var pieData = Object.entries(data).map(function (el, idx) {\n      return {\n        order: idx,\n        name: el[0],\n        value: el[1],\n      };\n    });\n    var pie = d3pie()\n      .value(function (d) {\n        return d.value;\n      })\n      .sort(function (a, b) {\n        // Sort slices in clockwise direction\n        return a.order - b.order;\n      });\n    var dataReady = pie(pieData);\n\n    // Shape helper to build arcs:\n    var arcGenerator = arc().innerRadius(0).outerRadius(radius);\n    var labelArcGenerator = arc()\n      .innerRadius(radius * textPosition)\n      .outerRadius(radius * textPosition);\n\n    svg\n      .append('circle')\n      .attr('cx', 0)\n      .attr('cy', 0)\n      .attr('r', radius + outerStrokeWidth / 2)\n      .attr('class', 'pieOuterCircle');\n\n    // Build the pie chart: each part of the pie is a path that we build using the arc function.\n    svg\n      .selectAll('mySlices')\n      .data(dataReady)\n      .enter()\n      .append('path')\n      .attr('d', arcGenerator)\n      .attr('fill', function (d) {\n        return color(d.data.name);\n      })\n      .attr('class', 'pieCircle');\n\n    // Now add the percentage.\n    // Use the centroid method to get the best coordinates.\n    svg\n      .selectAll('mySlices')\n      .data(dataReady)\n      .enter()\n      .append('text')\n      .text(function (d) {\n        return ((d.data.value / sum) * 100).toFixed(0) + '%';\n      })\n      .attr('transform', function (d) {\n        return 'translate(' + labelArcGenerator.centroid(d) + ')';\n      })\n      .style('text-anchor', 'middle')\n      .attr('class', 'slice');\n\n    svg\n      .append('text')\n      .text(diagObj.db.getDiagramTitle())\n      .attr('x', 0)\n      .attr('y', -(height - 50) / 2)\n      .attr('class', 'pieTitleText');\n\n    // Add the legends/annotations for each section\n    var legend = svg\n      .selectAll('.legend')\n      .data(color.domain())\n      .enter()\n      .append('g')\n      .attr('class', 'legend')\n      .attr('transform', function (d, i) {\n        const height = legendRectSize + legendSpacing;\n        const offset = (height * color.domain().length) / 2;\n        const horizontal = 12 * legendRectSize;\n        const vertical = i * height - offset;\n        return 'translate(' + horizontal + ',' + vertical + ')';\n      });\n\n    legend\n      .append('rect')\n      .attr('width', legendRectSize)\n      .attr('height', legendRectSize)\n      .style('fill', color)\n      .style('stroke', color);\n\n    legend\n      .data(dataReady)\n      .append('text')\n      .attr('x', legendRectSize + legendSpacing)\n      .attr('y', legendRectSize - legendSpacing)\n      .text(function (d) {\n        if (diagObj.db.getShowData() || conf.showData || conf.pie.showData) {\n          return d.data.name + ' [' + d.data.value + ']';\n        } else {\n          return d.data.name;\n        }\n      });\n  } catch (e) {\n    log.error('Error while rendering info diagram');\n    log.error(e);\n  }\n};\n\nexport default {\n  draw,\n};\n","import { DiagramDefinition } from '../../diagram-api/types';\n// @ts-ignore: TODO Fix ts errors\nimport parser from './parser/pie';\nimport db from './pieDb';\nimport styles from './styles';\nimport renderer from './pieRenderer';\n\nexport const diagram: DiagramDefinition = {\n  parser,\n  db,\n  renderer,\n  styles,\n};\n"]}